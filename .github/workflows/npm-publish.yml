name: Node.js Package

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: npm ci
      # add tests

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: Check Package Version
        uses: EndBug/version-check@v1
        id: package_version
        with:
          file-name: ./package.json
      - run: |
          echo "//----------- New Release Version ------------//"
          echo "version: ${{steps.package_version.outputs.version, "undefined"}}"
          echo "changed: ${{steps.package_version.outputs.changed, "undefined"}}"
          echo "type: ${{steps.package_version.outputs.type, "undefined"}}"
          echo "//-------------------------------------------//"
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        if: steps.package_version.outputs.changed == 'true'
        with:
          tag: ${{ steps.package_version.outputs.version }}
          name: Release ${{ steps.tag_version.outputs.version }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Publish to NPM Registry
        if: steps.package_version.outputs.changed == 'true'
        run: |
          echo "New Tag Version ${{steps.package_version.outputs.version}}"
          npm ci
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  # publish-gpr:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 14
  #         registry-url: https://npm.pkg.github.com/
  #     - run: npm ci
  #     - run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
